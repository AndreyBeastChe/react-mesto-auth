{"ast":null,"code":"var _jsxFileName = \"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route, Switch, Redirect, BrowserRouter, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\nimport api from \"../utils/api\";\nimport auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [cardDel, setCardDel] = React.useState(null);\n  const [loggedIn, setLoggedIn] = React.useState(true);\n  const [state, setState] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const history = useHistory();\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [checkAuth, setCheckAuth] = React.useState(true);\n  React.useEffect(() => {\n    api.getUser().then(user => {\n      setCurrentUser(user);\n    }).catch(err => console.log(\"Ошибка получения пользователя\" + err));\n  }, []);\n  React.useEffect(() => {\n    api.gerCards().then(cards => {\n      setCards(cards);\n    }).catch(err => console.log(\"Ошибка получения карточек\" + err));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleUpdateUser(user) {\n    api.setUser(user).then(newUser => {\n      setCurrentUser(newUser);\n      closeAllPopups();\n    }).catch(err => console.log(\"Ошибка измения пользователя\" + err));\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.changeAvatar(avatar).then(newAvatar => {\n      setCurrentUser(newAvatar);\n      closeAllPopups();\n    }).catch(err => console.log(\"Ошибка измения фото пользователя\" + err));\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard).then(cardData => {\n      setCards([cardData, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(\"Ошибка добавления карточки\" + err));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(\"Ошибка лайка карточки\" + err));\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(delCard => delCard._id !== card._id));\n    }).catch(err => console.log(\"Ошибка удаления карточки\" + err));\n  }\n\n  function handleRegister(_ref) {\n    let {\n      email,\n      password\n    } = _ref;\n    auth.signUp({\n      email,\n      password\n    }).then(() => {\n      setState(true);\n      setIsInfoTooltipOpen(true);\n      history.push(\"/signin\");\n    }).catch(err => {\n      console.log(\"Ошибка регистрации\" + err);\n      setState(false);\n      setIsInfoTooltipOpen(true);\n    });\n  }\n\n  function handleLogin(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    auth.signIn({\n      email,\n      password\n    }).then(res => {\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token);\n      }\n\n      setLoggedIn(true);\n      setEmail(email);\n      history.push(\"/\");\n    }).catch(err => {\n      console.log(\"Ошибка авторизации\" + err);\n    });\n  }\n\n  function signOut() {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    history.push(\"/signin\");\n  } // tokenCheck () {\n  //   // если у пользователя есть токен в localStorage,\n  //   // эта функция проверит валидность токена \n  //     const jwt = localStorage.getItem('jwt');\n  //   if (jwt){\n  //     // проверим токен\n  //     duckAuth.getContent(jwt).then((res) => {\n  //       if (res){\n  //                 // здесь можем получить данные пользователя!\n  //         const userData = {\n  //           username: res.username,\n  //           email: res.email\n  //         }\n  //                 // поместим их в стейт внутри App.js\n  //         this.setState({\n  //           loggedIn: true,\n  //           userData\n  //         }, () => {\n  //           this.props.history.push(\"/ducks\");\n  //         });\n  //       }\n  //     }); \n  //   }\n  // } \n  // const [checkAuth, setCheckAuth] = React.useState(true);\n  // React.useEffect(() => {\n  //   // если у пользователя есть токен в localStorage,\n  //   // эта функция проверит валидность токена \n  //     const jwt = localStorage.getItem('jwt');\n  //   if (jwt){\n  //     // проверим токен\n  //     auth\n  //       .checkAuth(jwt).then((res) => {\n  //       if (res){\n  //                 // здесь можем получить данные пользователя!\n  //                 setEmail(res.data.email);\n  //                 setLoggedIn(true);\n  //                 history.push(\"/\");\n  //                 // поместим их в стейт внутри App.js\n  //       }\n  //     })\n  //     .catch(() => {\n  //       localStorage.removeItem(\"jwt\");\n  //     })\n  //     .finally(() => setCheckAuth(false));\n  //   }\n  //   else {\n  //     setCheckAuth(false);\n  //   }\n  // } , [history]);\n\n\n  React.useEffect(() => {\n    debugger;\n    const jwt = localStorage.getItem(\"jwt\");\n\n    if (jwt) {\n      setCheckAuth(true);\n      auth.checkAuth(jwt).then(res => {\n        setEmail(res.data.email);\n        setLoggedIn(true);\n        history.push(\"/\");\n      }).catch(() => {\n        localStorage.removeItem(\"jwt\");\n      }).finally(() => setCheckAuth(false));\n    } else {\n      setCheckAuth(false);\n      history.push(\"/signin\");\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        signOut: signOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute //checkAuth = {checkAuth}\n        , {\n          loggedIn: loggedIn,\n          path: \"/\",\n          exact: true,\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            cards: cards,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            onAddPlace: handleAddPlaceSubmit,\n            onClose: closeAllPopups,\n            isOpen: isAddPlacePopupOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: selectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PZkbCXDuap68joFW16tlus45iCw=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/App.js"],"names":["React","useState","Route","Switch","Redirect","BrowserRouter","useHistory","Header","Footer","Main","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","InfoTooltip","ProtectedRoute","CurrentUserContext","api","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","cardDel","setCardDel","loggedIn","setLoggedIn","state","setState","email","setEmail","history","isInfoTooltipOpen","setIsInfoTooltipOpen","checkAuth","setCheckAuth","useEffect","getUser","then","user","catch","err","console","log","gerCards","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","closeAllPopups","handleUpdateUser","setUser","newUser","handleUpdateAvatar","avatar","changeAvatar","newAvatar","handleAddPlaceSubmit","newCard","addCard","cardData","handleCardLike","isLiked","likes","some","i","_id","likeCard","map","c","handleCardDelete","deleteCard","filter","delCard","handleRegister","password","signUp","push","handleLogin","signIn","res","token","localStorage","setItem","signOut","removeItem","jwt","getItem","data","finally"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,UALF,QAMO,kBANP;AAQA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAGA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IACJvB,KAAK,CAACC,QAAN,CAAe,KAAf,CADF;AAEA,QAAM,CAACuB,mBAAD,EAAsBC,sBAAtB,IAAgDzB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAtD;AACA,QAAM,CAACyB,qBAAD,EAAwBC,wBAAxB,IACJ3B,KAAK,CAACC,QAAN,CAAe,KAAf,CADF;AAEA,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC7B,KAAK,CAACC,QAAN,CAAe,IAAf,CAAxC;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC/B,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBjC,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACiC,OAAD,EAAUC,UAAV,IAAwBnC,KAAK,CAACC,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACmC,QAAD,EAAWC,WAAX,IAA0BrC,KAAK,CAACC,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACqC,KAAD,EAAQC,QAAR,IAAoBvC,KAAK,CAACC,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAACuC,KAAD,EAAQC,QAAR,IAAoBzC,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAMyC,OAAO,GAAGpC,UAAU,EAA1B;AACA,QAAM,CAACqC,iBAAD,EAAoBC,oBAApB,IAA4C5C,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlD;AACA,QAAM,CAAC4C,SAAD,EAAYC,YAAZ,IAA4B9C,KAAK,CAACC,QAAN,CAAe,IAAf,CAAlC;AAGAD,EAAAA,KAAK,CAAC+C,SAAN,CAAgB,MAAM;AACpB5B,IAAAA,GAAG,CACA6B,OADH,GAEGC,IAFH,CAESC,IAAD,IAAU;AACdnB,MAAAA,cAAc,CAACmB,IAAD,CAAd;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,kCAAkCF,GAA9C,CALlB;AAMD,GAPD,EAOG,EAPH;AASApD,EAAAA,KAAK,CAAC+C,SAAN,CAAgB,MAAM;AACpB5B,IAAAA,GAAG,CACAoC,QADH,GAEGN,IAFH,CAESjB,KAAD,IAAW;AACfC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAJH,EAKGmB,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,8BAA8BF,GAA1C,CALlB;AAMD,GAPD,EAOG,EAPH;;AASA,WAASI,sBAAT,GAAkC;AAChCjC,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD;;AAED,WAASkC,mBAAT,GAA+B;AAC7BhC,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AAED,WAASiC,qBAAT,GAAiC;AAC/B/B,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD;;AAED,WAASgC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B/B,IAAAA,eAAe,CAAC+B,IAAD,CAAf;AACD;;AAED,WAASC,cAAT,GAA0B;AACxBtC,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAI,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAF,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAe,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;;AAED,WAASkB,gBAAT,CAA0BZ,IAA1B,EAAgC;AAC9B/B,IAAAA,GAAG,CACA4C,OADH,CACWb,IADX,EAEGD,IAFH,CAESe,OAAD,IAAa;AACjBjC,MAAAA,cAAc,CAACiC,OAAD,CAAd;AACAH,MAAAA,cAAc;AACf,KALH,EAMGV,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,gCAAgCF,GAA5C,CANlB;AAOD;;AAED,WAASa,kBAAT,CAA4BC,MAA5B,EAAoC;AAClC/C,IAAAA,GAAG,CACAgD,YADH,CACgBD,MADhB,EAEGjB,IAFH,CAESmB,SAAD,IAAe;AACnBrC,MAAAA,cAAc,CAACqC,SAAD,CAAd;AACAP,MAAAA,cAAc;AACf,KALH,EAMGV,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,qCAAqCF,GAAjD,CANlB;AAOD;;AAED,WAASiB,oBAAT,CAA8BC,OAA9B,EAAuC;AACrCnD,IAAAA,GAAG,CACAoD,OADH,CACWD,OADX,EAEGrB,IAFH,CAESuB,QAAD,IAAc;AAClBvC,MAAAA,QAAQ,CAAC,CAACuC,QAAD,EAAW,GAAGxC,KAAd,CAAD,CAAR;AACA6B,MAAAA,cAAc;AACf,KALH,EAMGV,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,+BAA+BF,GAA3C,CANlB;AAOD;;AAED,WAASqB,cAAT,CAAwBb,IAAxB,EAA8B;AAC5B;AACA,UAAMc,OAAO,GAAGd,IAAI,CAACe,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUhD,WAAW,CAACgD,GAA7C,CAAhB,CAF4B,CAI5B;;AACA3D,IAAAA,GAAG,CACA4D,QADH,CACYnB,IAAI,CAACkB,GADjB,EACsB,CAACJ,OADvB,EAEGzB,IAFH,CAESqB,OAAD,IAAa;AACjBrC,MAAAA,QAAQ,CAAEK,KAAD,IACPA,KAAK,CAAC0C,GAAN,CAAWC,CAAD,IAAQA,CAAC,CAACH,GAAF,KAAUlB,IAAI,CAACkB,GAAf,GAAqBR,OAArB,GAA+BW,CAAjD,CADM,CAAR;AAGD,KANH,EAOG9B,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,0BAA0BF,GAAtC,CAPlB;AAQD;;AAED,WAAS8B,gBAAT,CAA0BtB,IAA1B,EAAgC;AAC9BzC,IAAAA,GAAG,CACAgE,UADH,CACcvB,IAAI,CAACkB,GADnB,EAEG7B,IAFH,CAEQ,MAAM;AACVhB,MAAAA,QAAQ,CAAEK,KAAD,IACPA,KAAK,CAAC8C,MAAN,CAAcC,OAAD,IAAaA,OAAO,CAACP,GAAR,KAAgBlB,IAAI,CAACkB,GAA/C,CADM,CAAR;AAGD,KANH,EAOG3B,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,6BAA6BF,GAAzC,CAPlB;AAQD;;AAED,WAASkC,cAAT,OAA6C;AAAA,QAArB;AAAE9C,MAAAA,KAAF;AAAS+C,MAAAA;AAAT,KAAqB;AAC3CnE,IAAAA,IAAI,CACDoE,MADH,CACU;AAAEhD,MAAAA,KAAF;AAAS+C,MAAAA;AAAT,KADV,EAEGtC,IAFH,CAEQ,MAAM;AACVV,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAK,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAF,MAAAA,OAAO,CAAC+C,IAAR,CAAa,SAAb;AACD,KANH,EAOGtC,KAPH,CAOUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,GAAnC;AACAb,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAK,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,KAXH;AAYD;;AAED,WAAS8C,WAAT,QAA0C;AAAA,QAArB;AAAElD,MAAAA,KAAF;AAAS+C,MAAAA;AAAT,KAAqB;AACxCnE,IAAAA,IAAI,CACDuE,MADH,CACU;AAAEnD,MAAAA,KAAF;AAAS+C,MAAAA;AAAT,KADV,EAEGtC,IAFH,CAES2C,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,KAAR,EAAe;AACbC,QAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,GAAG,CAACC,KAAhC;AACD;;AACDxD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAE,MAAAA,OAAO,CAAC+C,IAAR,CAAa,GAAb;AACD,KATH,EAUGtC,KAVH,CAUUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,GAAnC;AACD,KAZH;AAaD;;AAED,WAAS4C,OAAT,GAAmB;AACjBF,IAAAA,YAAY,CAACG,UAAb,CAAwB,KAAxB;AACA5D,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAK,IAAAA,OAAO,CAAC+C,IAAR,CAAa,SAAb;AACD,GAvJY,CA2Jb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOAzF,EAAAA,KAAK,CAAC+C,SAAN,CAAgB,MAAM;AACpB;AACA,UAAMmD,GAAG,GAAGJ,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAZ;;AACA,QAAID,GAAJ,EAAS;AACPpD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA1B,MAAAA,IAAI,CACDyB,SADH,CACaqD,GADb,EAEGjD,IAFH,CAES2C,GAAD,IAAS;AACbnD,QAAAA,QAAQ,CAACmD,GAAG,CAACQ,IAAJ,CAAS5D,KAAV,CAAR;AACAH,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,QAAAA,OAAO,CAAC+C,IAAR,CAAa,GAAb;AACD,OANH,EAOGtC,KAPH,CAOS,MAAM;AACX2C,QAAAA,YAAY,CAACG,UAAb,CAAwB,KAAxB;AACD,OATH,EAUGI,OAVH,CAUW,MAAMvD,YAAY,CAAC,KAAD,CAV7B;AAWD,KAbD,MAaO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,MAAAA,OAAO,CAAC+C,IAAR,CAAa,SAAb;AACD;AACF,GApBD,EAoBG,CAAC/C,OAAD,CApBH;AAwBA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEZ,WAApC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEU,KAAf;AAAsB,QAAA,OAAO,EAAEwD;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEI,QAAC,MAAD;AAAA,gCACE,QAAC,cAAD,CACE;AADF;AAEE,UAAA,QAAQ,EAAE5D,QAFZ;AAGE,UAAA,IAAI,EAAC,GAHP;AAIE,UAAA,KAAK,MAJP;AAAA,kCAME,QAAC,IAAD;AACE,YAAA,KAAK,EAAEJ,KADT;AAEE,YAAA,aAAa,EAAEwB,sBAFjB;AAGE,YAAA,UAAU,EAAEC,mBAHd;AAIE,YAAA,YAAY,EAAEC,qBAJhB;AAKE,YAAA,WAAW,EAAEC,eALf;AAME,YAAA,UAAU,EAAEc,cANd;AAOE,YAAA,YAAY,EAAES;AAPhB;AAAA;AAAA;AAAA;AAAA,kBANF,eAgBE,QAAC,gBAAD;AACE,YAAA,MAAM,EAAE5D,sBADV;AAEE,YAAA,OAAO,EAAEuC,cAFX;AAGE,YAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAsBE,QAAC,eAAD;AACE,YAAA,MAAM,EAAEpC,qBADV;AAEE,YAAA,OAAO,EAAEmC,cAFX;AAGE,YAAA,cAAc,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA,kBAtBF,eA4BE,QAAC,aAAD;AACE,YAAA,UAAU,EAAEI,oBADd;AAEE,YAAA,OAAO,EAAER,cAFX;AAGE,YAAA,MAAM,EAAErC;AAHV;AAAA;AAAA;AAAA;AAAA,kBA5BF,eAkCE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAEI,YAAlB;AAAgC,YAAA,OAAO,EAAEiC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAsCE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,cAAc,EAAEyB;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtCF,eAyCE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzCF,eA4CE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,oBACGtD,QAAQ,gBAAG,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAyB,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADpC;AAAA;AAAA;AAAA;AAAA,gBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAmDE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAnDF,eAoDE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEO,iBAArB;AAAwC,QAAA,OAAO,EAAEkB,cAAjD;AAAiE,QAAA,KAAK,EAAEvB;AAAxE;AAAA;AAAA;AAAA;AAAA,cApDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD;;GA1SQjB,G;UAaSf,U;;;KAbTe,G;AA4ST,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  BrowserRouter,\n  useHistory,\n} from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\n\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\nimport api from \"../utils/api\";\nimport auth from \"../utils/auth\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [cardDel, setCardDel] = React.useState(null);\n  const [loggedIn, setLoggedIn] = React.useState(true);\n  const [state, setState] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const history = useHistory();\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [checkAuth, setCheckAuth] = React.useState(true);\n\n\n  React.useEffect(() => {\n    api\n      .getUser()\n      .then((user) => {\n        setCurrentUser(user);\n      })\n      .catch((err) => console.log(\"Ошибка получения пользователя\" + err));\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .gerCards()\n      .then((cards) => {\n        setCards(cards);\n      })\n      .catch((err) => console.log(\"Ошибка получения карточек\" + err));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleUpdateUser(user) {\n    api\n      .setUser(user)\n      .then((newUser) => {\n        setCurrentUser(newUser);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(\"Ошибка измения пользователя\" + err));\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api\n      .changeAvatar(avatar)\n      .then((newAvatar) => {\n        setCurrentUser(newAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(\"Ошибка измения фото пользователя\" + err));\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api\n      .addCard(newCard)\n      .then((cardData) => {\n        setCards([cardData, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(\"Ошибка добавления карточки\" + err));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .likeCard(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(\"Ошибка лайка карточки\" + err));\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) =>\n          state.filter((delCard) => delCard._id !== card._id)\n        );\n      })\n      .catch((err) => console.log(\"Ошибка удаления карточки\" + err));\n  }\n\n  function handleRegister({ email, password }) {\n    auth\n      .signUp({ email, password })\n      .then(() => {\n        setState(true);\n        setIsInfoTooltipOpen(true)\n        history.push(\"/signin\");\n      })\n      .catch((err) => {\n        console.log(\"Ошибка регистрации\" + err);\n        setState(false);\n        setIsInfoTooltipOpen(true)\n      });\n  }\n\n  function handleLogin({ email, password }) {\n    auth\n      .signIn({ email, password })\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem(\"jwt\", res.token);\n        }\n        setLoggedIn(true);\n        setEmail(email);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(\"Ошибка авторизации\" + err);\n      });\n  }\n\n  function signOut() {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    history.push(\"/signin\");\n  }\n\n\n\n  // tokenCheck () {\n  //   // если у пользователя есть токен в localStorage,\n  //   // эта функция проверит валидность токена \n  //     const jwt = localStorage.getItem('jwt');\n  //   if (jwt){\n  //     // проверим токен\n  //     duckAuth.getContent(jwt).then((res) => {\n  //       if (res){\n  //                 // здесь можем получить данные пользователя!\n  //         const userData = {\n  //           username: res.username,\n  //           email: res.email\n  //         }\n  //                 // поместим их в стейт внутри App.js\n  //         this.setState({\n  //           loggedIn: true,\n  //           userData\n  //         }, () => {\n  //           this.props.history.push(\"/ducks\");\n  //         });\n  //       }\n  //     }); \n  //   }\n  // } \n\n\n  // const [checkAuth, setCheckAuth] = React.useState(true);\n  // React.useEffect(() => {\n  \n  //   // если у пользователя есть токен в localStorage,\n  //   // эта функция проверит валидность токена \n  //     const jwt = localStorage.getItem('jwt');\n  //   if (jwt){\n  //     // проверим токен\n  //     auth\n  //       .checkAuth(jwt).then((res) => {\n  //       if (res){\n  //                 // здесь можем получить данные пользователя!\n  //                 setEmail(res.data.email);\n  //                 setLoggedIn(true);\n  //                 history.push(\"/\");\n\n  //                 // поместим их в стейт внутри App.js\n          \n  //       }\n  //     })\n  //     .catch(() => {\n  //       localStorage.removeItem(\"jwt\");\n  //     })\n  //     .finally(() => setCheckAuth(false));\n  //   }\n  //   else {\n  //     setCheckAuth(false);\n  //   }\n  // } , [history]);\n\n\n\n\n\n \n  React.useEffect(() => {\n    debugger\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      setCheckAuth(true);\n      auth\n        .checkAuth(jwt)\n        .then((res) => {\n          setEmail(res.data.email);\n          setLoggedIn(true);\n          history.push(\"/\");\n        })\n        .catch(() => {\n          localStorage.removeItem(\"jwt\");\n        })\n        .finally(() => setCheckAuth(false));\n    } else {\n      setCheckAuth(false);\n      history.push(\"/signin\");\n    }\n  }, [history]);\n\n  \n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header email={email} signOut={signOut} />\n          <Switch>\n            <ProtectedRoute\n              //checkAuth = {checkAuth}\n              loggedIn={loggedIn}\n              path=\"/\"\n              exact\n            >\n              <Main\n                cards={cards}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n              />\n\n              <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n              />\n\n              <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n              />\n\n              <AddPlacePopup\n                onAddPlace={handleAddPlaceSubmit}\n                onClose={closeAllPopups}\n                isOpen={isAddPlacePopupOpen}\n              />\n\n              <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </ProtectedRoute>\n\n            <Route path=\"/signup\">\n              <Register handleRegister={handleRegister} />\n            </Route>\n            <Route path=\"/signin\">\n              <Login handleLogin={handleLogin} />\n            </Route>\n            <Route path=\"*\">\n              {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n            </Route>\n          </Switch>\n\n        <Footer />\n        <InfoTooltip isOpen={isInfoTooltipOpen} onClose={closeAllPopups} state={state} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}