{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n    this._groupId = \"cohort-33\";\n  }\n\n  checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUser() {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUser(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n\n  gerCards() {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n\n  changeAvatar(avatar) {\n    debugger;\n    return fetch(`${this._url}/${this._groupId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  likeCard(cardId, isLiked) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}/likes`, {\n      method: isLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co\",\n  headers: {\n    authorization: \"3671189f-65d1-4347-8209-095bdf48fd3f\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/utils/api.js"],"names":["Api","constructor","options","_url","url","_headers","headers","_groupId","checkResponse","res","ok","json","Promise","reject","status","getUser","fetch","then","_checkResponse","setUser","name","about","method","body","JSON","stringify","gerCards","addCard","link","changeAvatar","avatar","likeCard","cardId","isLiked","deleteCard","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n    this._groupId = \"cohort-33\";\n  }\n\n  checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUser() {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  setUser({ name, about }) {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({ name, about }),\n    }).then(this._checkResponse);\n  }\n\n  gerCards() {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  addCard({ name, link }) {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ name, link }),\n    }).then(this._checkResponse);\n  }\n\n  changeAvatar(avatar) {\n    debugger;\n    return fetch(`${this._url}/${this._groupId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({ avatar }),\n    }).then(this._checkResponse);\n  }\n\n  likeCard(cardId, isLiked) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}/likes`, {\n      method: isLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co\",\n  headers: {\n    authorization: \"3671189f-65d1-4347-8209-095bdf48fd3f\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}