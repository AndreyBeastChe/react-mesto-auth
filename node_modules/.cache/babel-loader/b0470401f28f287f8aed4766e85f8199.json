{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n    this._groupId = \"cohort-33\";\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUser() {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUser(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n\n  gerCards() {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n\n  changeAvatar(avatar) {\n    return fetch(`${this._url}/${this._groupId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  dislikeCard(cardId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co\",\n  headers: {\n    authorization: \"3671189f-65d1-4347-8209-095bdf48fd3f\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/mesto/src/utils/api.js"],"names":["Api","constructor","options","_url","url","_headers","headers","_groupId","_checkResponse","res","ok","json","Promise","reject","status","getUser","fetch","then","setUser","name","about","method","body","JSON","stringify","gerCards","addCard","link","changeAvatar","avatar","likeCard","cardId","dislikeCard","deleteCard","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n      this._url = options.url;\n      this._headers = options.headers;\n      this._groupId = \"cohort-33\";\n    }\n  \n    _checkResponse(res) {\n      return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    getUser() {\n      return fetch(`${this._url}/${this._groupId}/users/me`, {\n        headers: this._headers,\n      }).then(this._checkResponse);\n    }\n  \n    setUser({ name, about }) {\n      return fetch(`${this._url}/${this._groupId}/users/me`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({ name, about }),\n      }).then(this._checkResponse);\n    }\n  \n    gerCards() {\n      return fetch(`${this._url}/${this._groupId}/cards`, {\n        headers: this._headers,\n      }).then(this._checkResponse);\n    }\n  \n    addCard({ name, link }) {\n      return fetch(`${this._url}/${this._groupId}/cards`, {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({ name, link }),\n      }).then(this._checkResponse);\n    }\n  \n    changeAvatar(avatar) {\n      return fetch(`${this._url}/${this._groupId}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({ avatar }),\n      }).then(this._checkResponse);\n    }\n  \n    likeCard(cardId) {\n      return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: this._headers,\n      }).then(this._checkResponse);\n    }\n    dislikeCard(cardId) {\n      return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: this._headers,\n      }).then(this._checkResponse);\n    }\n  \n    deleteCard(cardId) {\n      return fetch(`${this._url}/v1/${this._groupId}/cards/${cardId}`, {\n        method: \"DELETE\",\n        headers: this._headers,\n      }).then(this._checkResponse);\n    }\n  }\n  \n   const api = new Api({\n    url: \"https://mesto.nomoreparties.co\",\n    headers: {\n      authorization: \"3671189f-65d1-4347-8209-095bdf48fd3f\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  export default api;\n\n  "]},"metadata":{},"sourceType":"module"}